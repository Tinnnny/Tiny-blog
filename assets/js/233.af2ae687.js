(window.webpackJsonp=window.webpackJsonp||[]).push([[233],{586:function(s,n,a){"use strict";a.r(n);var t=a(25),e=Object(t.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"nginx-反向代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx-反向代理"}},[s._v("#")]),s._v(" Nginx 反向代理")]),s._v(" "),a("h2",{attrs:{id:"什么是代理服务器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是代理服务器"}},[s._v("#")]),s._v(" 什么是代理服务器")]),s._v(" "),a("p",[s._v("代理服务器，客户机在发送请求时，不会直接发送给目的主机，而是先发送给代理服务器，代理服务接受客户机请求之后，再向主机发出，并接收目的主机返回的数据，存放在代理服务器的硬盘中，再发送给客户机。")]),s._v(" "),a("div",{attrs:{align:"center"}},[a("img",{attrs:{src:"http://ww1.sinaimg.cn/large/007Rnr4nly1g8mw9950evj30ab06g74k.jpg"}})]),s._v(" "),a("h2",{attrs:{id:"为什么要使用代理服务器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么要使用代理服务器"}},[s._v("#")]),s._v(" 为什么要使用代理服务器")]),s._v(" "),a("ul",[a("li",[s._v("提高访问速度： 由于目标主机返回的数据会存放在代理服务器的硬盘中，因此下一次客户再访问相同的站点数据时，会直接从代理服务器的硬盘中读取，起到了缓存的作用，尤其对于热门站点能明显提高请求速度。")]),s._v(" "),a("li",[s._v("防火墙作用： 由于所有的客户机请求都必须通过代理服务器访问远程站点，因此可在代理服务器上设限，过滤某些不安全信息。")]),s._v(" "),a("li",[s._v("通过代理服务器访问不能访问的目标站点： 互联网上有许多开放的代理服务器，客户机在访问受限时，可通过不受限的代理服务器访问目标站点，通俗说，我们使用的翻墙浏览器就是利用了代理服务器，虽然不能出国，但也可直接访问外网。")])]),s._v(" "),a("h2",{attrs:{id:"什么是正向代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是正向代理"}},[s._v("#")]),s._v(" 什么是正向代理")]),s._v(" "),a("p",[s._v("正向代理，架设在客户机与目标主机之间，只用于代理内部网络对 Internet 的连接请求，客户机必须指定代理服务器,并将本来要直接发送到 Web 服务器上的 HTTP 请求发送到代理服务器中。")]),s._v(" "),a("div",{attrs:{align:"center"}},[a("img",{attrs:{src:"http://ww1.sinaimg.cn/large/007Rnr4nly1g8mw9950evj30ab06g74k.jpg"}})]),s._v(" "),a("h2",{attrs:{id:"什么是反向代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是反向代理"}},[s._v("#")]),s._v(" 什么是反向代理")]),s._v(" "),a("p",[s._v("反向代理服务器架设在服务器端，通过缓冲经常被请求的页面来缓解服务器的工作量，将客户机请求转发给内部网络上的目标服务器；并将从服务器上得到的结果返回给 Internet 上请求连接的客户端，此时代理服务器与目标主机一起对外表现为一个服务器。")]),s._v(" "),a("div",{attrs:{align:"center"}},[a("img",{attrs:{src:"http://ww1.sinaimg.cn/large/007Rnr4nly1g8mwa791z0j30jz07g74i.jpg"}})]),s._v(" "),a("h2",{attrs:{id:"反向代理有哪些主要应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反向代理有哪些主要应用"}},[s._v("#")]),s._v(" 反向代理有哪些主要应用")]),s._v(" "),a("p",[s._v("现在许多大型 web 网站都用到反向代理。除了可以防止外网对内网服务器的恶性攻击、缓存以减少服务器的压力和访问安全控制之外，还可以进行负载均衡，将用户请求分配给多个服务器。")]),s._v(" "),a("h2",{attrs:{id:"使用-nginx-反向代理-tomcat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-nginx-反向代理-tomcat"}},[s._v("#")]),s._v(" 使用 Nginx 反向代理 Tomcat")]),s._v(" "),a("p",[s._v("需求")]),s._v(" "),a("ul",[a("li",[s._v("两个 Tomcat 服务通过 Nginx 反向代理")]),s._v(" "),a("li",[s._v("Nginx 服务器：192.168.27.121:80")]),s._v(" "),a("li",[s._v("Tomcat1 服务器：192.168.27.121:8081")]),s._v(" "),a("li",[s._v("Tomcat2 服务器：192.168.27.121:8082")])]),s._v(" "),a("h3",{attrs:{id:"启动-tomcat-容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动-tomcat-容器"}},[s._v("#")]),s._v(" 启动 Tomcat 容器")]),s._v(" "),a("p",[s._v("启动两个 Tomcat 容器，映射端口为 8081 和 8082，docker-compose.yml 如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("version: '3.1'\nservices:\n  tomcat1:\n    image: tomcat\n    container_name: tomcat1\n    ports:\n      - 8081:8080\n  tomcat2:\n    image: tomcat\n    container_name: tomcat2\n    ports:\n      - 8082:8080\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h3",{attrs:{id:"配置-nginx-反向代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置-nginx-反向代理"}},[s._v("#")]),s._v(" 配置 Nginx 反向代理")]),s._v(" "),a("p",[s._v("修改 /usr/local/docker/nginx/conf 目录下的 nginx.conf 配置文件：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("user  nginx;\nworker_processes  1;\nevents {\n    use epoll;\n    worker_connections  1024;\n}\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n    sendfile        on;\n    keepalive_timeout  65;\n    # 配置一个代理即 tomcat1 服务器\n    upstream tomcatServer1 {\n        server 192.168.27.121:8081;\n    }\n    # 配置一个代理即 tomcat2 服务器\n    upstream tomcatServer2 {\n        server 192.168.27.121:8082;\n    }\n    # 配置一个虚拟主机\n    server {\n        listen 80;\n        server_name service1.funtl.com;\n        location / {\n                # 域名 service1.funtl.com 的请求全部转发到 tomcatServer1 即 tomcat1 服务上\n                proxy_pass http://tomcatServer1;\n                # 欢迎页面，按照从左到右的顺序查找页面\n                index index.jsp index.html index.htm;\n        }\n    }\n    server {\n        listen 80;\n        server_name service2.funtl.com;\n        location / {\n            # 域名 service2.funtl.com 的请求全部转发到 tomcatServer2 即 tomcat2 服务上\n            proxy_pass http://tomcatServer2;\n            index index.jsp index.html index.htm;\n        }\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br")])]),a("blockquote",[a("p",[s._v('注意： 新版 Nginx 的 MARKDOWN_HASHbc3b0556316b0ba241ae6bb86b76e8a2MARKDOWNHASH 配置中的名称不可以有下划线("")，否则会报 400 错误')])])])}),[],!1,null,null,null);n.default=e.exports}}]);