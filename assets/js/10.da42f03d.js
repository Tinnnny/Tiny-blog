(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{365:function(t,a,v){"use strict";v.r(a);var l=v(25),s=Object(l.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"log4j简介"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#log4j简介"}},[t._v("#")]),t._v(" Log4j简介")]),t._v(" "),v("h2",{attrs:{id:"概述"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),v("p",[t._v("日志信息根据用途与记录内容的不同，分为 调试日志、运行日志、异常日志 等。Log4j 的全称为 Log for java，即专门用于 Java 语言的日志记录工具。")]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("日志级别由高到低，共分 6 个级别：")]),t._v(" "),v("ul",[v("li",[t._v("fatal(致命的)")]),t._v(" "),v("li",[t._v("error")]),t._v(" "),v("li",[t._v("warn")]),t._v(" "),v("li",[t._v("info")]),t._v(" "),v("li",[t._v("debug")]),t._v(" "),v("li",[t._v("trace(堆栈)")])])]),t._v(" "),v("h2",{attrs:{id:"日志输出配置"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#日志输出配置"}},[t._v("#")]),t._v(" 日志输出配置")]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("Log4j的日志输出配置log4j.properties：")]),t._v(" "),v("ul",[v("li",[t._v("%m：输出代码中指定的消息")]),t._v(" "),v("li",[t._v("%p：输出优先级，即 DEBUG，INFO，WARN，ERROR，FATAL")]),t._v(" "),v("li",[t._v("%r：输出自应用启动到输出该 log 信息耗费的毫秒数")]),t._v(" "),v("li",[t._v("%c：输出所属的类目，通常就是所在类的全名")]),t._v(" "),v("li",[t._v("%t：输出产生该日志事件的线程名")]),t._v(" "),v("li",[t._v("%n：输出一个回车换行符，Windows 平台为 /r/n，Unix 平台为 /n")]),t._v(" "),v("li",[t._v("%d：输出日志时间点的日期或时间，默认格式为 ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss , SSS}，输出类似：2002年10月18日 22:10:28,921")]),t._v(" "),v("li",[t._v("%l：输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java: 10 )")])])]),t._v(" "),v("h2",{attrs:{id:"slf4j简介"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#slf4j简介"}},[t._v("#")]),t._v(" Slf4j简介")]),t._v(" "),v("p",[v("code",[t._v("slf4j")]),t._v("的全称是 "),v("code",[t._v("Simple Loging Facade For Java")]),t._v("，即它仅仅是一个为 Java 程序提供日志输出的统一接口，并不是一个具体的日志实现方案，就比如 JDBC 一样，只是一种规则而已。所以单独的 slf4j 是不能工作的，必须搭配其他具体的日志实现方案，比如 apache 的 "),v("code",[t._v("org.apache.log4j.Logger")]),t._v("，JDK 自带的 "),v("code",[t._v("java.util.logging.Logger")]),t._v("以及 "),v("code",[t._v("log4j")]),t._v(" 等")])])}),[],!1,null,null,null);a.default=s.exports}}]);